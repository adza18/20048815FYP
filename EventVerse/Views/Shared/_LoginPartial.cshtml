@using EventVerse.Core.Entities;
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<div class="d-flex justify-content-end text-white" >
@if (SignInManager.IsSignedIn(User))
{
    <div class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </div>
    <div class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </div>
}
else
{
    <div class="pe-3">
        <a class="nav-link text-white" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </div>
    <div class="">
        <a class="nav-link text-white" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </div>
}
</div>
